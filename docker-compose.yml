#1. ask about how to log into database
#2. (answered)POST results - errors? JSON query status, and error message, edge cases 
#3. (answered)primary keys and id(what kind of ids?) - use primary key
#4. (answered)format our json? - no 
#5. reasonable number of fixtures
#6. drop databases after each run? 

#you should manually instantiate a database container called mysql
kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   ports: 
      - "9092:9092"
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   volumes:
      - ./batch:/app
   links:
      - kafka:kafka
      - es:es
   command: "python ./script.py"

models:
    image: tp33/django
    external_links:
      -  mysql:db
    volumes:
      - ./tangerine:/app
    ports:
      - "8001:8000"
      #command: bash -c "<command_1> && <command_2> && ..."
    command: bash -c "python manage.py flush --noinput && python manage.py flush --noinput && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata ./fixtures/db.json && mod_wsgi-express start-server --reload-on-changes ./tangerine/wsgi.py "

exp:
   image: tp33/django
   links: 
      - models:models-api
      - kafka:kafka
      - es:es
   ports:
      - "8002:8000"
   volumes: 
      - ./exp:/app
   command: bash -c "mod_wsgi-express start-server --reload-on-changes ./exp/wsgi.py"

web:
   image: tp33/django
   links:
      - exp:exp-api
   ports:
      - "8000:8000"
   volumes:
      - ./web:/app
   command: bash -c "mod_wsgi-express start-server --reload-on-changes --url-alias /static ./web/static ./web/wsgi.py"
